import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import sequelize from './config/database.js';
import userRoutes from './routes/userRoutes.js';


// рдЗрд╕ рдХреЛрдб рдореЗрдВ 5 рдореБрдЦреНрдп рдкреИрдХреЗрдЬ рдЗрдореНрдкреЛрд░реНрдЯ рдХрд┐рдП рдЧрдП рд╣реИрдВ:

// express тЖТ Express.js рдХрд╛ рдЙрдкрдпреЛрдЧ API рд╕рд░реНрд╡рд░ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИред
// cors тЖТ Cross-Origin Resource Sharing (CORS) рдХреЛ рд╣реИрдВрдбрд▓ рдХрд░рддрд╛ рд╣реИ, рдЬрд┐рд╕рд╕реЗ API рдХреЛ рдХрд┐рд╕реА рднреА рдлреНрд░рдВрдЯреЗрдВрдб рд╕реЗ рдПрдХреНрд╕реЗрд╕ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред
// dotenv тЖТ .env рдлрд╝рд╛рдЗрд▓ рд╕реЗ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди рд╡реИрд░рд┐рдПрдмрд▓реНрд╕ (рдЬреИрд╕реЗ: DB_NAME, DB_USER, PORT) рдХреЛ рд▓реЛрдб рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред
// sequelize тЖТ MySQL рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реЗ рдХрдиреЗрдХреНрд╢рди рд╕реНрдерд╛рдкрд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП Sequelize ORM рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддрд╛ рд╣реИред
// userRoutes тЖТ рдпреВрдЬрд╝рд░ рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд API рд░реВрдЯреНрд╕ (рдЬреИрд╕реЗ GET /users, POST /users) рдХреЛ рдЗрдореНрдкреЛрд░реНрдЯ рдХрд░рддрд╛ рд╣реИред



dotenv.config();
// тЬЕ .env рдлрд╝рд╛рдЗрд▓ рдореЗрдВ рдбреЗрдЯрд╛рдмреЗрд╕ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдФрд░ рдкреЛрд░реНрдЯ рдирдВрдмрд░ рд╕реНрдЯреЛрд░ рд╣реЛрддреЗ рд╣реИрдВ, рдЬрд┐рд╕реЗ рдпрд╣ рд▓рд╛рдЗрди рд▓реЛрдб рдХрд░рддреА рд╣реИред



const app = express();
const PORT = process.env.PORT || 5000;
// Express рд╕рд░реНрд╡рд░ рдмрдирд╛рдпрд╛ рдЧрдпрд╛ рдФрд░ рдкреЛрд░реНрдЯ рдХреЛ .env рдлрд╝рд╛рдЗрд▓ рд╕реЗ рд▓рд┐рдпрд╛ рдЧрдпрд╛ред рдЕрдЧрд░ .env рдореЗрдВ рдкреЛрд░реНрдЯ рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИ, рддреЛ рдбрд┐рдлрд╝реЙрд▓реНрдЯ 5000 рдкреЛрд░реНрдЯ рдХрд╛ рдЙрдкрдпреЛрдЧ рд╣реЛрдЧрд╛ред

// Middleware
app.use(cors());
app.use(express.json());

// тЬЕ Middleware рдХреНрдпрд╛ рдХрд░рддрд╛ рд╣реИ?

// cors() тЖТ API рдХреЛ рдХрд┐рд╕реА рднреА рдУрд░рд┐рдЬрд┐рди (рдЬреИрд╕реЗ React/Vue рдлреНрд░рдВрдЯреЗрдВрдб) рд╕реЗ рдПрдХреНрд╕реЗрд╕ рдХрд░рдиреЗ рджреЗрддрд╛ рд╣реИред
// express.json() тЖТ API рдореЗрдВ JSON рдбреЗрдЯрд╛ рдХреЛ рд╕рд╣реА рдврдВрдЧ рд╕реЗ рдкрдврд╝рдиреЗ рдХреЗ рд▓рд┐рдПред



// Routes  API рд░реВрдЯреНрд╕ рд╕реЗрдЯ рдХрд░рдирд╛ 
app.use('/api', userRoutes);


// Database Connection рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реЗ рдХрдиреЗрдХреНрд╢рди рдмрдирд╛рдирд╛
async function connectDB() {
  try {
    await sequelize.authenticate();
    console.log('Database connected successfully.');
    await sequelize.sync({ alter: true });
    console.log('Database synchronized.');
  } catch (error) {
    console.error('Unable to connect to the database:', error);
  }
}

// тЬЕ рдбреЗрдЯрд╛рдмреЗрд╕ рдХрдиреЗрдХреНрдЯ рдХрд░рдиреЗ рдХреА рдкреНрд░рдХреНрд░рд┐рдпрд╛:
// sequelize.authenticate() тЖТ рдЪреЗрдХ рдХрд░рддрд╛ рд╣реИ рдХрд┐ MySQL рдбреЗрдЯрд╛рдмреЗрд╕ рд╕рд╣реА рд╕реЗ рдХрдиреЗрдХреНрдЯ рд╣реЛ рд░рд╣рд╛ рд╣реИ рдпрд╛ рдирд╣реАрдВред
// sequelize.sync({ alter: true }) тЖТ рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реНрдХреАрдорд╛ рдХреЛ рдЕрдкрдбреЗрдЯ рдХрд░рддрд╛ рд╣реИ рддрд╛рдХрд┐ рдЯреЗрдмрд▓ рдСрдЯреЛрдореЗрдЯрд┐рдХрд▓реА рдмрдиреЗред
// рдЕрдЧрд░ рдХрдиреЗрдХреНрд╢рди рдлреЗрд▓ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ, рддреЛ error log рджрд┐рдЦрд╛рдПрдЧрд╛ред
connectDB();

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});

// Express рд╕рд░реНрд╡рд░ рдХреЛ рд╕реНрдЯрд╛рд░реНрдЯ рдХрд░рддрд╛ рд╣реИ рдФрд░ http://localhost:5000 рдкрд░ рд░рди рдХрд░рддрд╛ рд╣реИред




// ЁЯФ╣ рдЗрд╕ рдХреЛрдб рдХрд╛ рдЙрдкрдпреЛрдЧ рдХреНрдпреЛрдВ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?
// тЬЕ Express.js рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ API рд╕рд░реНрд╡рд░ рдмрдирд╛рдпрд╛ рдЧрдпрд╛ред
// тЬЕ Sequelize ORM рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ MySQL рдбреЗрдЯрд╛рдмреЗрд╕ рдХрдиреЗрдХреНрдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛ред
// тЬЕ CORS рдФрд░ JSON Middleware рдХреЛ рдЗрдиреЗрдмрд▓ рдХрд┐рдпрд╛ рдЧрдпрд╛ред
// тЬЕ рдпреВрдЬрд╝рд░ рдбреЗрдЯрд╛ рдореИрдиреЗрдЬ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП API рд░реВрдЯреНрд╕ /api/users рдЬреЛрдбрд╝реЗ рдЧрдПред
// тЬЕ рдбреЗрдЯрд╛рдмреЗрд╕ рдСрдЯреЛ-рд╕рд┐рдВрдХрд┐рдВрдЧ рдХреЛ рдЗрдиреЗрдмрд▓ рдХрд┐рдпрд╛ рдЧрдпрд╛ред





// ЁЯФ╣ 1. CORS Middleware (app.use(cors()))
// ЁЯСЙ CORS (Cross-Origin Resource Sharing) рдПрдХ рд╕реБрд░рдХреНрд╖рд╛ рдлрд╝реАрдЪрд░ рд╣реИ рдЬреЛ рдпрд╣ рддрдп рдХрд░рддрд╛ рд╣реИ рдХрд┐ рдХреМрди рд╕реЗ рдбреЛрдореЗрди (Websites / Frontend Applications) рдЖрдкрдХреЗ API рдХреЛ рдПрдХреНрд╕реЗрд╕ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред

// тЬЕ рдЗрд╕реЗ рдХреНрдпреЛрдВ рдЗрдиреЗрдмрд▓ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?
// рдЕрдЧрд░ рдЖрдк Frontend рдФрд░ Backend рдХреЛ рдЕрд▓рдЧ-рдЕрд▓рдЧ рд╕рд░реНрд╡рд░ рдкрд░ рд╣реЛрд╕реНрдЯ рдХрд░ рд░рд╣реЗ рд╣реИрдВ (рдЬреИрд╕реЗ React/Vue/Angular рдХрд╛ рдлреНрд░рдВрдЯреЗрдВрдб рдФрд░ Express.js рдХрд╛ API рдмреИрдХреЗрдВрдб), рддреЛ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рд╕реБрд░рдХреНрд╖рд╛ рдХрд╛рд░рдгреЛрдВ рд╕реЗ API рдХреЛ рдмреНрд▓реЙрдХ рдХрд░ рд╕рдХрддрд╛ рд╣реИред

// тЬЕ рдХреНрдпрд╛ рд╣реЛрдЧрд╛ рдЕрдЧрд░ CORS рдХреЛ рдЗрдиреЗрдмрд▓ рди рдХрд░реЗрдВ?
// рдЕрдЧрд░ рдЖрдк рдЗрд╕реЗ рдЗрдиреЗрдмрд▓ рдирд╣реАрдВ рдХрд░рддреЗ, рддреЛ рдмреНрд░рд╛рдЙрдЬрд╝рд░ "CORS Policy Error" рджреЗрдЧрд╛ рдФрд░ API рд╕реЗ рдбреЗрдЯрд╛ рдирд╣реАрдВ рдорд┐рд▓реЗрдЧрд╛ред

// ЁЯФ╣ рдЙрджрд╛рд╣рд░рдг:
// рдЕрдЧрд░ рдЖрдкрдХрд╛ Frontend (http://localhost:3000) рд╣реИ рдФрд░ Backend (http://localhost:5000), рддреЛ рдЬрдм рдлреНрд░рдВрдЯреЗрдВрдб рдмреИрдХреЗрдВрдб рд╕реЗ рдбреЗрдЯрд╛ рд▓реЗрдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдЧрд╛, рддреЛ CORS Error рдЖрдПрдЧрд╛ред
// рдЗрд╕реЗ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП cors() рдорд┐рдбрд▓рд╡реЗрдпрд░ рд▓рдЧрд╛рдпрд╛ рдЬрд╛рддрд╛ рд╣реИред





// ЁЯФ╣ 2. JSON Middleware (app.use(express.json()))
// ЁЯСЙ рдпрд╣ Middleware рдпрд╣ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рддрд╛ рд╣реИ рдХрд┐ рдЖрдкрдХрд╛ рд╕рд░реНрд╡рд░ JSON рдлреЙрд░реНрдореЗрдЯ рдореЗрдВ рдбреЗрдЯрд╛ рдХреЛ рд╕рд╣реА рд╕реЗ рдкрдврд╝ рдФрд░ рдкреНрд░реЛрд╕реЗрд╕ рдХрд░ рд╕рдХреЗред

// тЬЕ рдЗрд╕реЗ рдХреНрдпреЛрдВ рдЗрдиреЗрдмрд▓ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?
// рдЬрдм рд╣рдо Frontend рд╕реЗ JSON рдбреЗрдЯрд╛ рднреЗрдЬрддреЗ рд╣реИрдВ (рдЬреИрд╕реЗ React/Vue/Angular рд╕реЗ POST рдпрд╛ PUT API рдХреЙрд▓ рдореЗрдВ), рддреЛ Express рдЗрд╕реЗ рдкрдврд╝ рдирд╣реАрдВ рд╕рдХрддрд╛ рдЬрдм рддрдХ рд╣рдо express.json() рдХреЛ рдЗрдиреЗрдмрд▓ рди рдХрд░реЗрдВред

// тЬЕ рдХреНрдпрд╛ рд╣реЛрдЧрд╛ рдЕрдЧрд░ рдЗрд╕реЗ рдЗрдиреЗрдмрд▓ рди рдХрд░реЗрдВ?
// рдЕрдЧрд░ рдЖрдк app.use(express.json()) рдХреЛ рдирд╣реАрдВ рд▓рдЧрд╛рддреЗ, рддреЛ req.body undefined рд░рд╣реЗрдЧрд╛ рдФрд░ рдбреЗрдЯрд╛ рдмреИрдХреЗрдВрдб рддрдХ рдирд╣реАрдВ рдкрд╣реБрдВрдЪреЗрдЧрд╛ред

// ЁЯФ╣ рдЙрджрд╛рд╣рд░рдг:
// рдЕрдЧрд░ рдЖрдк React рд╕реЗ рдПрдХ API рдХреЙрд▓ рдХрд░рддреЗ рд╣реИрдВ:
